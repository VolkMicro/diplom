name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Логин в Docker Hub
      - name: Логин в Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Шаг 3: Сборка Docker-образа
      - name: Сборка Docker-образа
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/diplom:${{ github.ref_name }} .

      # Шаг 4: Публикация Docker-образа в Docker Hub
      - name: Публикация Docker-образа в Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/diplom:${{ github.ref_name }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установка Helm1
      - name: Установка Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # Шаг 3: Установка kubectl
      - name: Установка kubectl
        run: sudo snap install kubectl --classic

      # Шаг 4: Использование kubeconfig из репозитория
      - name: Настройка kubeconfig
        run: |
          mkdir -p $HOME/.kube
          cp ./config/kubeconfig.yaml $HOME/.kube/config
          echo "kubeconfig скопирован и настроен."

      # Шаг 5: Деплой в Kubernetes с помощью Helm
      - name: Деплой в Kubernetes
        run: |
          helm upgrade --install myapp ./myapp \
            --set image.tag=${{ github.ref_name }} \
            --set image.repository=${{ secrets.DOCKER_HUB_USERNAME }}/diplom
