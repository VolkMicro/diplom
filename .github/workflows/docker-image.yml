name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Поддержка длинных путей
      - name: Поддержка длинных путей
        run: |
          git config --global core.longpaths true
          git config --system core.longpaths true

      # Шаг 2: Клонирование репозитория
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1  # мелкий клон для избежания проблем с длинными путями

      # Шаг 3: Логин в Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Шаг 4: Передача секретов в контейнер
      - name: Set environment variables
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env

      # Шаг 5: Сборка Docker-образа
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/diplom:latest .

      # Шаг 6: Публикация Docker-образа в Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/diplom:latest

      # Шаг 7: Деплой приложения в Kubernetes
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG" | base64 --decode > $HOME/.kube/config
          kubectl set image deployment/diplom diplom=${{ secrets.DOCKER_HUB_USERNAME }}/diplom:latest --namespace default
